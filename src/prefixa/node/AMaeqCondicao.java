/* This file was generated by SableCC (http://www.sablecc.org/). */

package prefixa.node;

import prefixa.analysis.*;

@SuppressWarnings("nls")
public final class AMaeqCondicao extends PCondicao
{
    private PValor _valor_;
    private PMaiorIgual _maiorIgual_;

    public AMaeqCondicao()
    {
        // Constructor
    }

    public AMaeqCondicao(
        @SuppressWarnings("hiding") PValor _valor_,
        @SuppressWarnings("hiding") PMaiorIgual _maiorIgual_)
    {
        // Constructor
        setValor(_valor_);

        setMaiorIgual(_maiorIgual_);

    }

    @Override
    public Object clone()
    {
        return new AMaeqCondicao(
            cloneNode(this._valor_),
            cloneNode(this._maiorIgual_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMaeqCondicao(this);
    }

    public PValor getValor()
    {
        return this._valor_;
    }

    public void setValor(PValor node)
    {
        if(this._valor_ != null)
        {
            this._valor_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._valor_ = node;
    }

    public PMaiorIgual getMaiorIgual()
    {
        return this._maiorIgual_;
    }

    public void setMaiorIgual(PMaiorIgual node)
    {
        if(this._maiorIgual_ != null)
        {
            this._maiorIgual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._maiorIgual_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._valor_)
            + toString(this._maiorIgual_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._valor_ == child)
        {
            this._valor_ = null;
            return;
        }

        if(this._maiorIgual_ == child)
        {
            this._maiorIgual_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._valor_ == oldChild)
        {
            setValor((PValor) newChild);
            return;
        }

        if(this._maiorIgual_ == oldChild)
        {
            setMaiorIgual((PMaiorIgual) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
