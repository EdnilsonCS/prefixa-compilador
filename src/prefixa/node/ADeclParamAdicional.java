/* This file was generated by SableCC (http://www.sablecc.org/). */

package prefixa.node;

import prefixa.analysis.*;

@SuppressWarnings("nls")
public final class ADeclParamAdicional extends PDeclParamAdicional
{
    private TBarraId _barraId_;
    private PDeclParametro _declParametro_;

    public ADeclParamAdicional()
    {
        // Constructor
    }

    public ADeclParamAdicional(
        @SuppressWarnings("hiding") TBarraId _barraId_,
        @SuppressWarnings("hiding") PDeclParametro _declParametro_)
    {
        // Constructor
        setBarraId(_barraId_);

        setDeclParametro(_declParametro_);

    }

    @Override
    public Object clone()
    {
        return new ADeclParamAdicional(
            cloneNode(this._barraId_),
            cloneNode(this._declParametro_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclParamAdicional(this);
    }

    public TBarraId getBarraId()
    {
        return this._barraId_;
    }

    public void setBarraId(TBarraId node)
    {
        if(this._barraId_ != null)
        {
            this._barraId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._barraId_ = node;
    }

    public PDeclParametro getDeclParametro()
    {
        return this._declParametro_;
    }

    public void setDeclParametro(PDeclParametro node)
    {
        if(this._declParametro_ != null)
        {
            this._declParametro_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declParametro_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._barraId_)
            + toString(this._declParametro_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._barraId_ == child)
        {
            this._barraId_ = null;
            return;
        }

        if(this._declParametro_ == child)
        {
            this._declParametro_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._barraId_ == oldChild)
        {
            setBarraId((TBarraId) newChild);
            return;
        }

        if(this._declParametro_ == oldChild)
        {
            setDeclParametro((PDeclParametro) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
