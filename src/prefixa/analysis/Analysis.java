/* This file was generated by SableCC (http://www.sablecc.org/). */

package prefixa.analysis;

import prefixa.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAPrograma(APrograma node);
    void caseADeclFunc(ADeclFunc node);
    void caseADeclParametros(ADeclParametros node);
    void caseADeclParamAdicional(ADeclParamAdicional node);
    void caseADeclParametro(ADeclParametro node);
    void caseAParametros(AParametros node);
    void caseAParamAdicional(AParamAdicional node);
    void caseATipoTipoRetornoFunc(ATipoTipoRetornoFunc node);
    void caseANoneTipoRetornoFunc(ANoneTipoRetornoFunc node);
    void caseADeclVar(ADeclVar node);
    void caseAIdAdicional(AIdAdicional node);
    void caseATipoBaseTipo(ATipoBaseTipo node);
    void caseAVectorTipo(AVectorTipo node);
    void caseAIntTipoBase(AIntTipoBase node);
    void caseACharTipoBase(ACharTipoBase node);
    void caseABoolTipoBase(ABoolTipoBase node);
    void caseAComandoAtrib(AComandoAtrib node);
    void caseAIntValor(AIntValor node);
    void caseARealValor(ARealValor node);
    void caseABoolValor(ABoolValor node);
    void caseAVarValor(AVarValor node);
    void caseAOpStmt(AOpStmt node);
    void caseAExpUnStmt(AExpUnStmt node);
    void caseAMaisOpr(AMaisOpr node);
    void caseAMenosOpr(AMenosOpr node);
    void caseAVezesOpr(AVezesOpr node);
    void caseAFracOpr(AFracOpr node);
    void caseAIgualOpr(AIgualOpr node);
    void caseAMeigualOpr(AMeigualOpr node);
    void caseAMaigualOpr(AMaigualOpr node);
    void caseAMenorOpr(AMenorOpr node);
    void caseAMaiorOpr(AMaiorOpr node);
    void caseAAndOpr(AAndOpr node);
    void caseAOrOpr(AOrOpr node);
    void caseANotOpr(ANotOpr node);
    void caseANomevarExpUn(ANomevarExpUn node);
    void caseAChamadaExpUn(AChamadaExpUn node);
    void caseAConstanExpUn(AConstanExpUn node);
    void caseAChamada(AChamada node);
    void caseAVetorVar(AVetorVar node);
    void caseAIdVar(AIdVar node);
    void caseAIfComando(AIfComando node);
    void caseAWhileComando(AWhileComando node);
    void caseAForeachComando(AForeachComando node);
    void caseABlocoComando(ABlocoComando node);
    void caseASendbackComando(ASendbackComando node);
    void caseAPatribComando(APatribComando node);
    void caseAChamadaComando(AChamadaComando node);
    void caseABloco(ABloco node);
    void caseABlocoFuncao(ABlocoFuncao node);
    void caseAExpReturn(AExpReturn node);
    void caseAIntdecConstante(AIntdecConstante node);
    void caseAIntbinConstante(AIntbinConstante node);
    void caseAInthexConstante(AInthexConstante node);
    void caseACharConstante(ACharConstante node);
    void caseAStringConstante(AStringConstante node);
    void caseABooltrueConstante(ABooltrueConstante node);
    void caseABoolfalseConstante(ABoolfalseConstante node);

    void caseTVazio(TVazio node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTCharId(TCharId node);
    void caseTIntId(TIntId node);
    void caseTBoolId(TBoolId node);
    void caseTRealId(TRealId node);
    void caseTBarraId(TBarraId node);
    void caseTIfId(TIfId node);
    void caseTElseId(TElseId node);
    void caseTStartBlockId(TStartBlockId node);
    void caseTEndBlockId(TEndBlockId node);
    void caseTNotId(TNotId node);
    void caseTAndId(TAndId node);
    void caseTOrId(TOrId node);
    void caseTComma(TComma node);
    void caseTNoneId(TNoneId node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTMod(TMod node);
    void caseTDoubleDot(TDoubleDot node);
    void caseTBoolType(TBoolType node);
    void caseTWhile(TWhile node);
    void caseTDo(TDo node);
    void caseTForeach(TForeach node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTLBracket(TLBracket node);
    void caseTRBracket(TRBracket node);
    void caseTLBrace(TLBrace node);
    void caseTRBrace(TRBrace node);
    void caseTIgualQue(TIgualQue node);
    void caseTMenorQue(TMenorQue node);
    void caseTMenorIgualQue(TMenorIgualQue node);
    void caseTMaiorQue(TMaiorQue node);
    void caseTMaiorIgualQue(TMaiorIgualQue node);
    void caseTSemicolon(TSemicolon node);
    void caseTTrueId(TTrueId node);
    void caseTFalseId(TFalseId node);
    void caseTVectorId(TVectorId node);
    void caseTReturn(TReturn node);
    void caseTScan(TScan node);
    void caseTPrint(TPrint node);
    void caseTString(TString node);
    void caseTCharVar(TCharVar node);
    void caseTComments(TComments node);
    void caseTLongComment(TLongComment node);
    void caseTIntType(TIntType node);
    void caseTRealType(TRealType node);
    void caseTIdentifier(TIdentifier node);
    void caseTNumber(TNumber node);
    void caseTNumeroBin(TNumeroBin node);
    void caseTHexNumber(THexNumber node);
    void caseEOF(EOF node);
}
