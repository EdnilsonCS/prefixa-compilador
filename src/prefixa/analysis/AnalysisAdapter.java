/* This file was generated by SableCC (http://www.sablecc.org/). */

package prefixa.analysis;

import java.util.*;
import prefixa.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    public void caseADeclFunc(ADeclFunc node)
    {
        defaultCase(node);
    }

    public void caseADeclParametros(ADeclParametros node)
    {
        defaultCase(node);
    }

    public void caseADeclParamAdicional(ADeclParamAdicional node)
    {
        defaultCase(node);
    }

    public void caseADeclParametro(ADeclParametro node)
    {
        defaultCase(node);
    }

    public void caseAParametros(AParametros node)
    {
        defaultCase(node);
    }

    public void caseAParamAdicional(AParamAdicional node)
    {
        defaultCase(node);
    }

    public void caseATipoTipoRetornoFunc(ATipoTipoRetornoFunc node)
    {
        defaultCase(node);
    }

    public void caseANoneTipoRetornoFunc(ANoneTipoRetornoFunc node)
    {
        defaultCase(node);
    }

    public void caseADeclVar(ADeclVar node)
    {
        defaultCase(node);
    }

    public void caseAIdAdicional(AIdAdicional node)
    {
        defaultCase(node);
    }

    public void caseATipoBaseTipo(ATipoBaseTipo node)
    {
        defaultCase(node);
    }

    public void caseAVectorTipo(AVectorTipo node)
    {
        defaultCase(node);
    }

    public void caseAIntTipoBase(AIntTipoBase node)
    {
        defaultCase(node);
    }

    public void caseACharTipoBase(ACharTipoBase node)
    {
        defaultCase(node);
    }

    public void caseABoolTipoBase(ABoolTipoBase node)
    {
        defaultCase(node);
    }

    public void caseAComandoAtrib(AComandoAtrib node)
    {
        defaultCase(node);
    }

    public void caseAIntValor(AIntValor node)
    {
        defaultCase(node);
    }

    public void caseARealValor(ARealValor node)
    {
        defaultCase(node);
    }

    public void caseABoolValor(ABoolValor node)
    {
        defaultCase(node);
    }

    public void caseAVarValor(AVarValor node)
    {
        defaultCase(node);
    }

    public void caseAOpStmt(AOpStmt node)
    {
        defaultCase(node);
    }

    public void caseAExpUnStmt(AExpUnStmt node)
    {
        defaultCase(node);
    }

    public void caseAMaisOpr(AMaisOpr node)
    {
        defaultCase(node);
    }

    public void caseAMenosOpr(AMenosOpr node)
    {
        defaultCase(node);
    }

    public void caseAVezesOpr(AVezesOpr node)
    {
        defaultCase(node);
    }

    public void caseAFracOpr(AFracOpr node)
    {
        defaultCase(node);
    }

    public void caseAIgualOpr(AIgualOpr node)
    {
        defaultCase(node);
    }

    public void caseAMeigualOpr(AMeigualOpr node)
    {
        defaultCase(node);
    }

    public void caseAMaigualOpr(AMaigualOpr node)
    {
        defaultCase(node);
    }

    public void caseAMenorOpr(AMenorOpr node)
    {
        defaultCase(node);
    }

    public void caseAMaiorOpr(AMaiorOpr node)
    {
        defaultCase(node);
    }

    public void caseAAndOpr(AAndOpr node)
    {
        defaultCase(node);
    }

    public void caseAOrOpr(AOrOpr node)
    {
        defaultCase(node);
    }

    public void caseANotOpr(ANotOpr node)
    {
        defaultCase(node);
    }

    public void caseANomevarExpUn(ANomevarExpUn node)
    {
        defaultCase(node);
    }

    public void caseAChamadaExpUn(AChamadaExpUn node)
    {
        defaultCase(node);
    }

    public void caseAConstanExpUn(AConstanExpUn node)
    {
        defaultCase(node);
    }

    public void caseAChamada(AChamada node)
    {
        defaultCase(node);
    }

    public void caseAVetorVar(AVetorVar node)
    {
        defaultCase(node);
    }

    public void caseAIdVar(AIdVar node)
    {
        defaultCase(node);
    }

    public void caseAIfComando(AIfComando node)
    {
        defaultCase(node);
    }

    public void caseAWhileComando(AWhileComando node)
    {
        defaultCase(node);
    }

    public void caseAForeachComando(AForeachComando node)
    {
        defaultCase(node);
    }

    public void caseABlocoComando(ABlocoComando node)
    {
        defaultCase(node);
    }

    public void caseASendbackComando(ASendbackComando node)
    {
        defaultCase(node);
    }

    public void caseAPatribComando(APatribComando node)
    {
        defaultCase(node);
    }

    public void caseAChamadaComando(AChamadaComando node)
    {
        defaultCase(node);
    }

    public void caseABloco(ABloco node)
    {
        defaultCase(node);
    }

    public void caseABlocoFuncao(ABlocoFuncao node)
    {
        defaultCase(node);
    }

    public void caseAExpReturn(AExpReturn node)
    {
        defaultCase(node);
    }

    public void caseAIntdecConstante(AIntdecConstante node)
    {
        defaultCase(node);
    }

    public void caseAIntbinConstante(AIntbinConstante node)
    {
        defaultCase(node);
    }

    public void caseAInthexConstante(AInthexConstante node)
    {
        defaultCase(node);
    }

    public void caseACharConstante(ACharConstante node)
    {
        defaultCase(node);
    }

    public void caseAStringConstante(AStringConstante node)
    {
        defaultCase(node);
    }

    public void caseABooltrueConstante(ABooltrueConstante node)
    {
        defaultCase(node);
    }

    public void caseABoolfalseConstante(ABoolfalseConstante node)
    {
        defaultCase(node);
    }

    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    public void caseTCharId(TCharId node)
    {
        defaultCase(node);
    }

    public void caseTIntId(TIntId node)
    {
        defaultCase(node);
    }

    public void caseTBoolId(TBoolId node)
    {
        defaultCase(node);
    }

    public void caseTRealId(TRealId node)
    {
        defaultCase(node);
    }

    public void caseTBarraId(TBarraId node)
    {
        defaultCase(node);
    }

    public void caseTIfId(TIfId node)
    {
        defaultCase(node);
    }

    public void caseTElseId(TElseId node)
    {
        defaultCase(node);
    }

    public void caseTStartBlockId(TStartBlockId node)
    {
        defaultCase(node);
    }

    public void caseTEndBlockId(TEndBlockId node)
    {
        defaultCase(node);
    }

    public void caseTNotId(TNotId node)
    {
        defaultCase(node);
    }

    public void caseTAndId(TAndId node)
    {
        defaultCase(node);
    }

    public void caseTOrId(TOrId node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTNoneId(TNoneId node)
    {
        defaultCase(node);
    }

    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTDoubleDot(TDoubleDot node)
    {
        defaultCase(node);
    }

    public void caseTBoolType(TBoolType node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    public void caseTForeach(TForeach node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTIgualQue(TIgualQue node)
    {
        defaultCase(node);
    }

    public void caseTMenorQue(TMenorQue node)
    {
        defaultCase(node);
    }

    public void caseTMenorIgualQue(TMenorIgualQue node)
    {
        defaultCase(node);
    }

    public void caseTMaiorQue(TMaiorQue node)
    {
        defaultCase(node);
    }

    public void caseTMaiorIgualQue(TMaiorIgualQue node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTTrueId(TTrueId node)
    {
        defaultCase(node);
    }

    public void caseTFalseId(TFalseId node)
    {
        defaultCase(node);
    }

    public void caseTVectorId(TVectorId node)
    {
        defaultCase(node);
    }

    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    public void caseTScan(TScan node)
    {
        defaultCase(node);
    }

    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTCharVar(TCharVar node)
    {
        defaultCase(node);
    }

    public void caseTComments(TComments node)
    {
        defaultCase(node);
    }

    public void caseTLongComment(TLongComment node)
    {
        defaultCase(node);
    }

    public void caseTIntType(TIntType node)
    {
        defaultCase(node);
    }

    public void caseTRealType(TRealType node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseTNumeroBin(TNumeroBin node)
    {
        defaultCase(node);
    }

    public void caseTHexNumber(THexNumber node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
