/* This file was generated by SableCC (http://www.sablecc.org/). */

package prefixa.analysis;

import java.util.*;
import prefixa.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    public void caseABoolType(ABoolType node)
    {
        defaultCase(node);
    }

    public void caseARealType(ARealType node)
    {
        defaultCase(node);
    }

    public void caseACharType(ACharType node)
    {
        defaultCase(node);
    }

    public void caseAIntValor(AIntValor node)
    {
        defaultCase(node);
    }

    public void caseARealValor(ARealValor node)
    {
        defaultCase(node);
    }

    public void caseABoolValor(ABoolValor node)
    {
        defaultCase(node);
    }

    public void caseAVarValor(AVarValor node)
    {
        defaultCase(node);
    }

    public void caseAUnicoTypeList(AUnicoTypeList node)
    {
        defaultCase(node);
    }

    public void caseAVariosTypeList(AVariosTypeList node)
    {
        defaultCase(node);
    }

    public void caseAIfCondicional(AIfCondicional node)
    {
        defaultCase(node);
    }

    public void caseAIfelseCondicional(AIfelseCondicional node)
    {
        defaultCase(node);
    }

    public void caseACondicao(ACondicao node)
    {
        defaultCase(node);
    }

    public void caseAEqCondicao(AEqCondicao node)
    {
        defaultCase(node);
    }

    public void caseAMqCondicao(AMqCondicao node)
    {
        defaultCase(node);
    }

    public void caseAMnCondicao(AMnCondicao node)
    {
        defaultCase(node);
    }

    public void caseAMneqCondicao(AMneqCondicao node)
    {
        defaultCase(node);
    }

    public void caseAMaeqCondicao(AMaeqCondicao node)
    {
        defaultCase(node);
    }

    public void caseANegCondicao(ANegCondicao node)
    {
        defaultCase(node);
    }

    public void caseAAndCondicao(AAndCondicao node)
    {
        defaultCase(node);
    }

    public void caseAOrCondicao(AOrCondicao node)
    {
        defaultCase(node);
    }

    public void caseACondCondicao(ACondCondicao node)
    {
        defaultCase(node);
    }

    public void caseAEqIgual(AEqIgual node)
    {
        defaultCase(node);
    }

    public void caseAMqMaior(AMqMaior node)
    {
        defaultCase(node);
    }

    public void caseAMnMenor(AMnMenor node)
    {
        defaultCase(node);
    }

    public void caseAMneqMenorIgual(AMneqMenorIgual node)
    {
        defaultCase(node);
    }

    public void caseAMaeqMaiorIgual(AMaeqMaiorIgual node)
    {
        defaultCase(node);
    }

    public void caseAAndAnd(AAndAnd node)
    {
        defaultCase(node);
    }

    public void caseAOrOr(AOrOr node)
    {
        defaultCase(node);
    }

    public void caseABlocoBloco(ABlocoBloco node)
    {
        defaultCase(node);
    }

    public void caseAFunctionDeclaration(AFunctionDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAIdentifierFunctionDeclaration(AIdentifierFunctionDeclaration node)
    {
        defaultCase(node);
    }

    public void caseAPointerFunctionDeclarator(APointerFunctionDeclarator node)
    {
        defaultCase(node);
    }

    public void caseADirectFunctionDeclarator(ADirectFunctionDeclarator node)
    {
        defaultCase(node);
    }

    public void caseADirectPointerFunction(ADirectPointerFunction node)
    {
        defaultCase(node);
    }

    public void caseAPointerPointerFunction(APointerPointerFunction node)
    {
        defaultCase(node);
    }

    public void caseAIdentifierDirectFunctionDeclarator(AIdentifierDirectFunctionDeclarator node)
    {
        defaultCase(node);
    }

    public void caseAFunctionDirectFunctionDeclarator(AFunctionDirectFunctionDeclarator node)
    {
        defaultCase(node);
    }

    public void caseAParameterList(AParameterList node)
    {
        defaultCase(node);
    }

    public void caseAParameterListTail(AParameterListTail node)
    {
        defaultCase(node);
    }

    public void caseAParameterDeclaration(AParameterDeclaration node)
    {
        defaultCase(node);
    }

    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    public void caseTCharId(TCharId node)
    {
        defaultCase(node);
    }

    public void caseTIntId(TIntId node)
    {
        defaultCase(node);
    }

    public void caseTBoolId(TBoolId node)
    {
        defaultCase(node);
    }

    public void caseTRealId(TRealId node)
    {
        defaultCase(node);
    }

    public void caseTIfId(TIfId node)
    {
        defaultCase(node);
    }

    public void caseTElseId(TElseId node)
    {
        defaultCase(node);
    }

    public void caseTStartBlockId(TStartBlockId node)
    {
        defaultCase(node);
    }

    public void caseTEndBlockId(TEndBlockId node)
    {
        defaultCase(node);
    }

    public void caseTNotId(TNotId node)
    {
        defaultCase(node);
    }

    public void caseTAndId(TAndId node)
    {
        defaultCase(node);
    }

    public void caseTOrId(TOrId node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    public void caseTDoubleDot(TDoubleDot node)
    {
        defaultCase(node);
    }

    public void caseTBoolType(TBoolType node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    public void caseTFor(TFor node)
    {
        defaultCase(node);
    }

    public void caseTEach(TEach node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTIgualQue(TIgualQue node)
    {
        defaultCase(node);
    }

    public void caseTMenorQue(TMenorQue node)
    {
        defaultCase(node);
    }

    public void caseTMenorIgualQue(TMenorIgualQue node)
    {
        defaultCase(node);
    }

    public void caseTMaiorQue(TMaiorQue node)
    {
        defaultCase(node);
    }

    public void caseTMaiorIgualQue(TMaiorIgualQue node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTScan(TScan node)
    {
        defaultCase(node);
    }

    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTComments(TComments node)
    {
        defaultCase(node);
    }

    public void caseTLongComment(TLongComment node)
    {
        defaultCase(node);
    }

    public void caseTIntType(TIntType node)
    {
        defaultCase(node);
    }

    public void caseTRealType(TRealType node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
