none module(value)
  start
    if(value < 0)
     start
       send back -value;
     end  
    else
     start
      send back value;
     end
  end


none div(value_1, value_2)
  start
    integer  result <</ value_1 value_2;

    send back result;
  end


none mult(value_1, value_2)
  start
    integer result <<* value_1 value_2;

    send back result;
  end


none sub(value_1, value_2)
  start
    if(value_2 == 0)
      start
       return 0;
      end

    integer result <<- value_1 value_2;

    send back result;
  end

none some(value_1, value_2)
  start
    integer result <<+ value_1 value_2;

    send back result;
  end



none main()
 #array casos de teste
 start

 pessoas << 9;
 brinquedo_por_pessoa << [1,2,3,4,5,6,7,8,9];
 valor_por_brinquedo << [10, 11, 12, 20, 30, 40, 50, 80, 90];
  
 integer total = 0;
 integer media = 0;
 integer i = 0;

 integer totalValor = 0;
 
 #soma total de brinquedo
 while(i < 9)
  start
    total << soma(total, brinquedo_por_pessoa[i]);
    i << + i 1;
  end
 
#calcula a media
 media << div(total,pessoas);
 

#calcula o valor dos brinquedo
 i << 0;
 while(i < 9)
  start
   integer valor = mult(valor_por_brinquedo[i], brinquedo_por_pessoa[i]);
   totalValor << soma(valor, totalValor);
   i << + i 1;
  end

 
 boolean isOk << true;

 end
